
<!DOCTYPE html>
<html lang="en">

  <%include ../head%>

  <body>
   
    <div class="page-wrapper chiller-theme toggled">
      <a id="show-sidebar" class="btn btn-sm btn-dark" href="#">
        <i class="fas fa-bars"></i>
      </a>
      <%include ../sidebar%>

      <main class="page-content">
            
        <div class="container">
            <!-- Navibar -->
            <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
            
                <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
                    <a class="navbar-brand" href="/admin/">Trang chủ</a>
                    <a class="navbar-brand" href="#">/</a>
                    <a class="navbar-brand" href="/admin/supplier">Nhà cung cấp</a>
                    <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                        
                    </ul>
                    <form class="form-inline my-2 my-lg-0">
                        <button class="btn btn-outline-success my-2 my-sm-0" id="createNew" type="button" 
                        data-toggle="modal" data-target="#my-supplier-dialog-new">Tạo mới</button>
                    </form>
                </div>
            </nav>


        <%include newsupplierdialog%>
        <%include editsupplierdialog%>
        <!-- table -->
        <table class="table table-striped">
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">Nhà cung cấp</th>
                <th scope="col">Email</th>
                <th scope="col">Số điện thoại</th>
                <th scope="col">Địa chỉ</th>
                <th scope="col">Thao tác</th>
              </tr>
            </thead>
            <tbody id="display">
            </tbody>
        </table>

        <!-- Pagination component -->
        <nav aria-label="...">
            <ul class="pagination">
                <li class="page-item ">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                </li>
                <li class="page-item active" ><a class="page-link" href="#">1</a></li>
                <li class="page-item " aria-current="page">
                <a class="page-link" href="#">2 <span class="sr-only">(current)</span></a>
                </li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>  

  
        
       <!-- Optional JavaScript -->
       <!-- JQuery First, then Popper.js, then Bootstrap Js-->
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
        <script>
            $(document).ready(() =>{

               // $('#example').DataTable();
                // Còn bug nè, chỗ này nếu như người ta không nhập gì mà nhấn nút tạo mới thì nó bị mất hiệu ứng mờ, 
                // BUGGGGG 

                
                $('.closemodal').on('click',()=>{
                    $('#my-supplier-dialog-new').modal('toggle');
                    $(".modal-backdrop").remove();
                })
               
                $('.closemodaledit').on('click',()=>{
                    $('#my-supplier-dialog-edit').modal('toggle');
                    $(".modal-backdrop").remove();
                })
                // BUGG bellow 

                $(document).keyup(function(e) {
                    if (e.key === "Escape") { // escape key maps to keycode `27`
                        $(".modal-backdrop").remove();
                    }
                });
                const display = $("#display") ;
                const form = $("#form");
                const nameUserInput = $("#nameUserInput");
                const emailUserInput = $("#emailUserInput");
                const phoneUserInput = $("#phoneUserInput");
                const addressUserInput = $("#addressUserInput");
                const closemodal = $("#closemodal");

                const editnameUserInput = $("#editnameUserInput");
                const editemailUserInput = $("#editemailUserInput");
                const editphoneUserInput = $("#editphoneUserInput");
                const editaddressUserInput = $("#editaddressUserInput");
                const editClose = $("#editclose");
               
                const editForm = $("#form-edit");

                const modalNew = $("#my-supplier-dialog-new");
                const modalEdit = $("#my-supplier-dialog-edit");
                const getSupplier = () => {
                    fetch("/admin/getSupplier?pageNo=1&size=5", {method: "get"})
                        .then(response => response.json())
                        .then(data =>{
                            displaySupplier(data);
                        });
                }
                

               getSupplier();

             

              const buildTemplate = (supplier, ids) =>{
                   return `
                   
                   <tr id="${ids.listItemID}">
                    <td>1</td>
                    <td id="${ids.supplierID}">${supplier.displayName}</td>
                    <td id="${ids.emailphone}">${supplier.email}</td>
                    <td id="${ids.emailphone}">${supplier.phone}</td>
                    <td class="text-wrap" id="${ids.address}">${supplier.address}</td>
                    <td><div class="text-right">
                                <button type="button" class="btn btn-secondary" id="${ids.editID}" data-toggle="modal" data-target="#my-supplier-dialog-edit">Edit</button>
                                <button type="button" class="btn btn-danger" id="${ids.deleteID}">Delete</button>
                            </div> </td>
                    </tr>
                   `;
               }
            //    const buildTemplate = (supplier, ids) =>{
            //        return `
            //         <li class ="list-group-item" id ="${ids.listItemID}">
            //             <div class = "row">
            //                 <div class = "col-md-3" id = "${ids.supplierID}">${supplier.displayName}</div> 
            //                 <div class="col-md-3" id="${ids.emailphone}">${supplier.email}, ${supplier.phone}</div>
            //                 <div class="col-md-3" id="${ids.address}">${supplier.address}</div>
            //                 <div class="col-md-3 text-right">
            //                     <button type="button" class="btn btn-secondary" id="${ids.editID}" data-toggle="modal" data-target="#my-supplier-dialog-edit">Edit</button>
            //                     <button type="button" class="btn btn-danger" id="${ids.deleteID}">Delete</button>
            //                 </div>
            //             </div>
            //         </li>
            //        `;
            //    }

               const buildIDS = (supplier) => {
                   return {
                       listItemID: "listItem_" + supplier._id,
                       supplierID: "supplier_" + supplier._id,
                       emailphone: "emailphone_" + supplier._id,
                       address: "address_" + supplier._id,
                       editID: "edit_" + supplier._id,
                       deleteID: "delete_" + supplier._id
                   }
               }

               const displaySupplier = (data) => {
                   data.forEach((supplier) => {
                        let ids = buildIDS(supplier);
                        display.append(buildTemplate(supplier,ids));
                        editSupplier(supplier, ids);
                        deleteSupplier(supplier, ids);
                   });
               }

               resetSupplierInput = () =>{ 
                   nameUserInput.val('');
                   emailUserInput.val('');
                   phoneUserInput.val('');
                   addressUserInput.val('');
                }

                
                // submit create supplier
               form.submit((e) =>{
                   e.preventDefault();
                   fetch("/admin/supplier", {
                       method: 'post',
                       body: JSON.stringify({displayName: nameUserInput.val(),email: emailUserInput.val(), phone: phoneUserInput.val(), address: addressUserInput.val()}),
                       headers: {"Content-Type": "application/json; charset=utf-8"}
                   })
                   .then((response) =>{
                       return response.json();
                   })
                   .then(data =>{
                       if(!data.error){
                           if(data.result.ok == 1 && data.result.n == 1){
                                let ids = buildIDS(data.document);
                                display.append(buildTemplate(data.document,ids));
                                editSupplier(data.document,ids);
                                deleteSupplier(data.document,ids);
                            } 
                       }
                       modalNew.removeAttr("display");
                       modalNew.attr("display","none");
                       closemodal.trigger("click");
                       $(".modal-backdrop").remove();
                       resetSupplierInput();
                       
                   });
                });
               

                
                $('#createNew').click(()=>{
                    setTimeout(() => {
                        if(modalNew.hasClass('show')){
                            modalNew.css("display","block");
                        }
                    
                    }, 1000);
                    })

                const editSupplier = (supplier, ids) => {
                let editBtn = $(`#${ids.editID}`);
                editBtn.click(()=>{
                         fetch(`/admin/supplier/${supplier._id}`, {method: "get"})
                        .then(response => response.json())
                        .then(async(data)=>{
                            await
                            editaddressUserInput.val(`${data.address}`);
                            editemailUserInput.val(`${data.email}`);
                            editphoneUserInput.val(`${data.phone}`);
                            editnameUserInput.val(`${data.displayName}`);

                            // set style{display: -> block} 
                            $("#my-supplier-dialog-edit").css("display","block");
                        });

                        // after form shown and user input value and then click "Cap nhat" button
                        // handle submit "Cap nhat" button

                        editForm.unbind("submit").submit((e) => {
                            e.preventDefault();
                            fetch(`/admin/supplier/${supplier._id}`,{
                            method: "put",
                            headers: {"Content-Type": "application/json; charset=utf-8"},
                            body: JSON.stringify({
                                displayName: editnameUserInput.val(),
                                email: editemailUserInput.val(),
                                phone: editphoneUserInput.val(),
                                address: editaddressUserInput.val()
                            })
                        }).then((response)=>{
                            return response.json();
                        }).then((data)=>{
                            if(data.ok == 1){
                                // Display new data.
                                let supplierIndex = $(`#${ids.supplierID}`);
                                supplierIndex.html(data.value.displayName);
                                let emailphone = $(`#${ids.emailphone}`);
                                emailphone.html(data.value.email + ", " + data.value.phone);
                                let phone = $(`#${ids.address}`);
                                phone.html(data.value.address);

                                // Hide modal
                                modalNew.removeAttr("display");
                                modalNew.attr("display","none");
                                editClose.trigger("click");
                                $(".modal-backdrop").remove();
                               
                            // get messsage here
                            }else{
                            // get message here
                            }
                        });
                        })
                   
                });
               }


               const deleteSupplier = (supplier, ids) =>{
                   let deleteBtn = $(`#${ids.deleteID}`);
                   deleteBtn.click(() => {
                        fetch(`/admin/supplier/${supplier._id}`,{
                            method: "delete"
                        }).then(response =>{
                            return response.json();
                        }).then(data => {
                            if(data.ok == 1){
                                $(`#${ids.listItemID}`).remove();
                            }
                        });
                   });
               }
            });
        </script>

      </main>
    
    </div>

  </body>

</html>

