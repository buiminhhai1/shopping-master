<!DOCTYPE html>
<html>
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    
        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    
        <title>Todo Crud Application</title>       
    </head>

    <body>
       <div class="container">
            <div class="row">
                <div class="col-lg-1"></div>
                <div class="col-lg-10">
                    <form id="form">
                        <div class="form-group">
                            <label for="todo">Todo List</label>
                            <input type="text" class="form-control" id="nameUserInput" placeholder="displayName">
                            <input type="text" class="form-control" id="emailUserInput" placeholder="email">
                            <input type="text" class="form-control" id="phoneUserInput" placeholder="phone">
                            <input type="text" class="form-control" id="addressUserInput" placeholder="address">
                            <br/>
                            <button type="submit" class="btn btn-primary">Create</button>
                        </div>
                        
                    </form>
                </div>
                <div class="col-lg-1"></div>
            </div>

            <div class="row">
                <div class="col-lg-1"></div>
                <div class="col-lg-10">
                    <ul class="list-group" id="display">
                    
                    </ul>
                </div>
                <div class="col-lg-1"></div>
            </div> 
            <br>
            <div class="row">
                <div class="col-lg-1"></div>
                <div class="col-lg-10">
                    <div class="alert" role="alert" id="message">
                        
                    </div>
                </div>
                <div class="col-lg-1"></div>
            </div>   
       </div>
       <!-- Optional JavaScript -->
       <!-- JQuery First, then Popper.js, then Bootstrap Js-->
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
        <script>
            $(document).ready(() =>{
                const display = $("#display") ;
                const form = $("#form");
                const nameUserInput = $("#nameUserInput");
                const emailUserInput = $("#emailUserInput");
                const phoneUserInput = $("#phoneUserInput");
                const addressUserInput = $("#addressUserInput");
                const message = $("#message");
                message.hide();
                
                const displayMessage = (flag, msg) => {
                    // successful
                    if(flag){
                        message.removeClass('alert-danger');
                        message.addClass('alert-success');
                        message.html(msg);
                        message.show();
                    }else {
                        message.removeClass('alert-success');
                        message.addClass('alert-danger');
                        message.html(msg);
                        message.show();
                    }
                }

                const getSupplier = () => {
                    fetch("/admin/getSupplier", {method: "get"})
                        .then(response => response.json())
                        .then(data =>{
                            displaySupplier(data);
                        });
                }

               getSupplier();

               const buildTemplate = (supplier, ids) =>{
                   return `
                    <li class ="list-group-item" id ="${ids.listItemID}">
                        <div class = "row">
                            <div class = "col-md-3" id = "${ids.supplierID}">${supplier.displayName}</div> 
                            <div class="col-md-3">${supplier.email}, ${supplier.phone}</div>
                            <div class="col-md-3">${supplier.address}</div>
                            <div class="col-md-3 text-right">
                                <button type="button" class="btn btn-secondary" id="${ids.editID}">Edit</button>
                                <button type="button" class="btn btn-danger" id="${ids.deleteID}">Delete</button>
                            </div>
                        </div>
                    </li>
                   `;
               }

               const buildIDS = (supplier) => {
                   return {
                       listItemID: "listItem_" + supplier._id,
                       supplierID: "supplier_" + supplier._id,
                       editID: "edit_" + supplier._id,
                       deleteID: "delete_" + supplier._id
                   }
               }

               const displaySupplier = (data) => {
                   data.forEach((supplier) => {
                        let ids = buildIDS(supplier);
                        display.append(buildTemplate(supplier,ids));
                        editSupplier(supplier, ids.supplierID, ids.editID);
                        deleteSupplier(todo, ids.listItemID, ids.deleteID);
                   });
               }

               resetSupplierInput = () =>{ 
                   nameUserInput.val('');
                   emailUserInput.val('');
                   phoneUserInput.val('');
                   addressUserInput.val('');
                }

               form.submit((e) =>{
                   e.preventDefault();
                   fetch("/admin/supplier", {
                       method: 'post',
                       body: JSON.stringify({displayName: nameUserInput.val(),
                      email: emailUserInput.val(), phone: phoneUserInput.val(), address: addressUserInput.val()}),
                       headers: {"Content-Type": "application/json; charset=utf-8"}
                   })
                   .then((response) =>{
                       return response.json();
                   })
                   .then(data =>{
                       if(!data.error){
                           if(data.result.ok == 1 && data.result.n == 1){
                                let ids = buildIDS(data.document);
                                displaySupplier.append(buildTemplate(data.document,ids));
                                editSupplier(data.document,ids.todoID,ids.editID);
                                deleteTodo(data.document,ids.listItemID,ids.deleteID);
                               // displayMessage(true, data.msg);
                            } 
                       }
                       else{
                         // displayMessage(false,data.error.message);
                       }
                       resetSupplierInput();
                   });
               });

               const editSupplier = (supplier, SupplierID, editID) => {
                let editBtn = $(`#${editID}`);
                editBtn.click(()=>{
                    fetch(`/admin/supplier/${supplier._id}`,{
                        method: "put",
                        headers: {"Content-Type": "application/json; charset=utf-8"},
                        body: JSON.stringify({
                            displayName: nameUserInput.val(),
                            email: emailUserInput.val(),
                            phone: phoneUserInput.val(),
                            address: addressUserInput.val()
                        })
                    }).then((response)=>{
                        
                        return response.json();
                    }).then((data)=>{
                        if(data.ok == 1){
                            let supplierIndex = $(`#${supplierID}`);
                            supplierIndex.html(data.value.supplier);
                            resetSupplierInput();
                           
                        }else{
                         
                        }
                    });
                });
               }


               const deleteTodo = (todo, listItemID, deleteID) =>{
                   let deleteBtn = $(`#${deleteID}`);
                   deleteBtn.click(() => {
                        fetch(`/${todo._id}`,{
                            method: "delete"
                        }).then(response =>{
                            return response.json();
                        }).then(data => {
                            if(data.ok == 1){
                                displayMessage(true,"delete " + data.value.todo);
                                $(`#${listItemID}`).remove();
                            }
                        });
                   });
               }
            });
        </script>
    </body>
</html>
